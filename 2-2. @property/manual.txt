property - свойство (атрибут) класса, который доступен всем его экзамплярам <class 'property'>

Свойство property предоставляют промежуточную функциональность между атрибутами и методами.
Другими словами, они позволяют создавать методы, которые ведут себя как атрибуты.
Свойство property — это атрибут класса, который управляет атрибутами (свойствами и методами) экземпляров.
Мы также можем считать свойство набором методов (геттер, сеттер, делитер), собранных вместе в единый объект.

Для создания свойств используется встроенная функция property(). Она принимает четыре необязательных аргумента:
fget — функция для получения значения атрибута, fset — функция для установки значения атрибута,
fdel — функция для удаления атрибута, doc='...' — строка документации.


name = property(get_name, set_name)		# создаем свойство name для управления именем (в теле класса)

print(cat1.name)		# неявный вызов get метода для объекта класса
cat2.new_name = 'Pusa'	# неявный вызов set метода для объекта класса

Обратиться к методам, содержащимся в свойстве, можно через атрибуты fget, fset и fdel
print(Cat.name.fget)	# обращаемся к геттеру свойства
print(Cat.name.fset)	# обращаемся к сеттеру свойства
print(Cat.name.fdel)	# обращаемся к делитеру свойства


Создание свойства внутри класса:
<свойство> = property(fget=None, fset=None, fdel=None, doc='Описание <свойства>')
<объект>.<свойство> 				# неявно вызывает fget
<объект>.<свойство> = <значение>	# неявно вызывает fset
del <объект>.<свойство> 			# неявно вызывает fdel
<объект>.<свойство>.__doc__			# возвращает значение doc

-----------------------

Декоратор @property

class Person:
    def __init__(self, name):
        self.name = name		# инициализация через сеттер

    @property
    def name(self):
        return self._name

    @name.setter
    def name(self, old):
        self._name = name		# создание атрибута или замена значения
