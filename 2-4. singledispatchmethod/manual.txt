ПЕРЕГРУЗКА МЕТОДОВ

@singledispatchmethod
Универсальная функция (generic function) представляет собой функцию, составленную из нескольких функций,
реализующих одну и ту же операцию для различных типов. Одиночная диспетчеризация (single dispatch) — это алгоритм,
который выбирает нужную реализацию на основе типа одного аргумента. Именно поэтому диспетчеризация называется одиночной.


from functools import singledispatchmethod

class MyClass:
    @singledispatchmethod
    def base_implement(self, arg):		# для всех прочих типов данных
        print('Базовая реализация')

    @base_implement.register(int)		# для целый чисел
    def _from_int(self, arg):
        print('Реализация для целочисленного аргумента')

    @base_implement.register(str)		# для строковых значений
    def _from_str(self, arg):
        print('Реализация для строкового аргумента')


Основным ограничением перегрузки методов с помощью декоратора @singledispatchmethod является то,
что мы полагаемся лишь на тип одного аргумента — первого после self. Для перегрузки методов,
основанной на типах нескольких аргументов, используются сторонние библиотеки (multipledispatch, multimethod).